- BlackBox:
    name: Clash.Xilinx.ClockGen.clockWizard
    kind: Declaration
    type: |-
      clockWizard
        :: ( KnownDomain domIn            -- ARG[0]
           , KnownDomain domOut )         -- ARG[1]
        => SSymbol name                   -- ARG[2]
        -> Clock domIn                    -- ARG[3]
        -> Reset domIn                    -- ARG[4]
        -> (Clock domOut, Signal domOut Bool)
    template: |-
      // clockWizard begin
      ~NAME[2] ~GENSYM[clockWizard_inst][2]
      (.clk_in1  (~ARG[3])
      ,.reset    (~IF ~ISACTIVEHIGH[0] ~THEN ~ELSE ! ~FI ~ARG[4])
      ,.clk_out1 (~RESULT[1])
      ,.locked   (~RESULT[0]));
      // clockWizard end
    includes:
      - name: clk_wiz
        extension: clash.tcl
        format: Haskell
        templateFunction: Clash.Primitives.Xilinx.ClockGen.clockWizardTclTF
    workInfo: Always
- BlackBox:
    name: Clash.Xilinx.ClockGen.clockWizardDifferential
    kind: Declaration
    type: |-
      clockWizardDifferential
        :: ( KnownDomain domIn            -- ARG[0]
           , KnownDomain domOut )         -- ARG[1]
        :: SSymbol name                   -- ARG[2]
        -> Clock domIn                    -- ARG[3]
        -> Clock domIn                    -- ARG[4]
        -> Reset domIn                    -- ARG[5]
        -> (Clock domOut, Signal domOut Bool)
    template: |-
      // clockWizardDifferential begin
      ~NAME[2] ~GENSYM[clockWizardDifferential_inst][2]
      (.clk_in1_n       (~ARG[3])
      ,.clk_in1_p       (~ARG[4])
      ,.reset           (~IF ~ISACTIVEHIGH[0] ~THEN ~ELSE ! ~FI ~ARG[5])
      ,.clk_out1        (~RESULT[1])
      ,.locked          (~RESULT[0]));
      // clockWizardDifferential end
    includes:
      - name: clk_wiz
        extension: clash.tcl
        format: Haskell
        templateFunction: Clash.Primitives.Xilinx.ClockGen.clockWizardDifferentialTclTF
    workInfo: Always
